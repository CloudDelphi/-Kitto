<?xml version="1.0" encoding="utf-8"?>
<nodeSet version="1.0">
  <view uin="08ou7a00xrs_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:Kitto:EF.StrUtils.TEFStringStack">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.TEFStringStack.Pop()" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.TEFStringStack.Push(System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.TEFStringStack.Peek()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Kitto:EF.StrUtils.TEFStringTokenizer">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Kitto:EF.StrUtils.TEFStringTokenizer.FTokens" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.TEFStringTokenizer.GetToken(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.TEFStringTokenizer.GetTokenCount()" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.TEFStringTokenizer.ExtractTokens(System.string,System.Char)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.TEFStringTokenizer.Create(System.string,System.Char)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.TEFStringTokenizer.Destroy()" />
      <reference referencedUin="delphi:e_property:src:Kitto:EF.StrUtils.TEFStringTokenizer.Tokens[System.Integer]" />
      <reference referencedUin="delphi:e_property:src:Kitto:EF.StrUtils.TEFStringTokenizer.TokenCount" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.TEFStringTokenizer.IndexOfToken(System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.TEFStringTokenizer.AddTokensToStrings(Classes.TStrings)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Kitto:EF.StrUtils.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.RightPos(System.string,System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.StripPrefixAndSuffix(System.string,System.string,System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.StripPrefix(System.string,System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.StripSuffix(System.string,System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.GetRandomString(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.StrMatches(System.string,System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.StrMatchesEx(System.string,System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.CountSubstrings(System.string,System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.MatchStr(System.string,System.string[])" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.CreateCompactGuidStr()" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.CreateGuidStr()" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.FetchStr(ref@System.string,ref@System.string,System.string,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.WordPos(System.string,System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.WordPos(System.string[],System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.PadRight(System.string,System.Integer,System.Char)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.PadLeft(System.string,System.Integer,System.Char)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.TextFileToString(System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.StringToTextFile(System.string,System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.AppendStringToTextFile(System.string,System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.UpperUnderscoreToCamel(System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.CamelToUpperUnderscore(System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.CamelToSpaced(System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.MakePlural(System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.GetIndexOfValue(Classes.TStrings,System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.InsertStr(System.string,System.string,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.CountLeading(System.string,System.Char)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.TabsToSpaces(System.string,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.StringInCommaList(System.string,System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.CommaListItemCount(System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.SmartConcat(System.string,System.string,System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.FirstDifferent(System.string[],System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.GetStringHash(System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.IsoDayOfWeekToDayOfWeek(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.Split(System.string,System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.Join(System.string[],System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.SplitPairs(System.string,System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.JoinPairs(Generics.Collections.TPair&lt;System.string,System.string&gt;[],System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.StrUtils.@unitclass.InternalPad(System.Boolean,System.string,System.Integer,System.Char)" />
    </reference>
  </view>
</nodeSet>