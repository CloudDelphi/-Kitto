<?xml version="1.0" encoding="utf-8"?>
<nodeSet version="1.0">
  <view uin="21u3dlcz0co_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:Kitto:Kitto.AccessControl.DB.TKDBAccessController">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Kitto:Kitto.AccessControl.DB.TKDBAccessController.FUserPermissions" />
      <reference referencedUin="delphi:e_method:src:Kitto:Kitto.AccessControl.DB.TKDBAccessController.ClearAllUserPermissions()" />
      <reference referencedUin="delphi:e_method:src:Kitto:Kitto.AccessControl.DB.TKDBAccessController.EnsureUserPermissions(System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:Kitto.AccessControl.DB.TKDBAccessController.InternalGetAccessGrantValue(System.string,System.string,System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:Kitto.AccessControl.DB.TKDBAccessController.AfterConstruction()" />
      <reference referencedUin="delphi:e_method:src:Kitto:Kitto.AccessControl.DB.TKDBAccessController.Destroy()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Kitto:Kitto.AccessControl.DB.@unitclass">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Kitto:Kitto.AccessControl.DB.TKUserPermissionStorage">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Kitto:Kitto.AccessControl.DB.TKUserPermissionStorage.RESOURCE_URI_PATTERN" />
      <reference referencedUin="delphi:e_field:src:Kitto:Kitto.AccessControl.DB.TKUserPermissionStorage.ACCESS_MODES" />
      <reference referencedUin="delphi:e_field:src:Kitto:Kitto.AccessControl.DB.TKUserPermissionStorage.GRANT_VALUE" />
      <reference referencedUin="delphi:e_field:src:Kitto:Kitto.AccessControl.DB.TKUserPermissionStorage.FUserId" />
      <reference referencedUin="delphi:e_field:src:Kitto:Kitto.AccessControl.DB.TKUserPermissionStorage.FPermissions" />
      <reference referencedUin="delphi:e_field:src:Kitto:Kitto.AccessControl.DB.TKUserPermissionStorage.FReadRolesCommandText" />
      <reference referencedUin="delphi:e_field:src:Kitto:Kitto.AccessControl.DB.TKUserPermissionStorage.FReadPermissionsCommandText" />
      <reference referencedUin="delphi:e_method:src:Kitto:Kitto.AccessControl.DB.TKUserPermissionStorage.SetUserId(System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:Kitto.AccessControl.DB.TKUserPermissionStorage.ReloadCurrentUserPermissions()" />
      <reference referencedUin="delphi:e_method:src:Kitto:Kitto.AccessControl.DB.TKUserPermissionStorage.LoadGranteePermissions(System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:Kitto.AccessControl.DB.TKUserPermissionStorage.GetUserRoles(System.string,Classes.TStrings)" />
      <reference referencedUin="delphi:e_method:src:Kitto:Kitto.AccessControl.DB.TKUserPermissionStorage.AfterConstruction()" />
      <reference referencedUin="delphi:e_method:src:Kitto:Kitto.AccessControl.DB.TKUserPermissionStorage.Destroy()" />
      <reference referencedUin="delphi:e_property:src:Kitto:Kitto.AccessControl.DB.TKUserPermissionStorage.UserId" />
      <reference referencedUin="delphi:e_method:src:Kitto:Kitto.AccessControl.DB.TKUserPermissionStorage.GetAccessGrantValue(System.string,System.string)" />
      <reference referencedUin="delphi:e_property:src:Kitto:Kitto.AccessControl.DB.TKUserPermissionStorage.ReadPermissionsCommandText" />
      <reference referencedUin="delphi:e_property:src:Kitto:Kitto.AccessControl.DB.TKUserPermissionStorage.ReadRolesCommandText" />
    </reference>
  </view>
</nodeSet>