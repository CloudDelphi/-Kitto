<?xml version="1.0" encoding="utf-8"?>
<nodeSet version="1.0">
  <view uin="bplmiqkagqp_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:Kitto:EF.PluginManager.TEFBeforeUnloadPluginEvent">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Kitto:EF.PluginManager.TEFBeforeLoadPluginEvent">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Kitto:EF.PluginManager.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:Kitto:EF.PluginManager.@unitclass._EFPluginManager" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.PluginManager.@unitclass.PluginManager()" />
      <reference referencedUin="delphi:e_field:src:Kitto:EF.PluginManager.@unitclass.EFPLUGIN_INITIALIZATION_PROC_NAME" />
      <reference referencedUin="delphi:e_field:src:Kitto:EF.PluginManager.@unitclass.EFPLUGIN_FINALIZATION_PROC_NAME" />
      <reference referencedUin="delphi:e_field:src:Kitto:EF.PluginManager.@unitclass.msgCouldntLoadPackage" />
      <reference referencedUin="delphi:e_field:src:Kitto:EF.PluginManager.@unitclass.msgCouldntFindPackage" />
      <reference referencedUin="delphi:e_field:src:Kitto:EF.PluginManager.@unitclass._EFPluginManager" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.PluginManager.@unitclass.EFLoadPackage(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Kitto:EF.PluginManager.TEFPluginInfo">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Kitto:EF.PluginManager.TEFPluginInfo.FHandle" />
      <reference referencedUin="delphi:e_field:src:Kitto:EF.PluginManager.TEFPluginInfo.FFileName" />
      <reference referencedUin="delphi:e_property:src:Kitto:EF.PluginManager.TEFPluginInfo.Handle" />
      <reference referencedUin="delphi:e_property:src:Kitto:EF.PluginManager.TEFPluginInfo.FileName" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Kitto:EF.PluginManager.TEFPluginErrorEvent">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Kitto:EF.PluginManager.TEFPluginProc">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Kitto:EF.PluginManager.TEFAfterLoadPluginEvent">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Kitto:EF.PluginManager.TEFPluginManager">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:Kitto:EF.PluginManager.TEFPluginManager.BeforeUnloadPlugin" />
      <reference referencedUin="delphi:l_ast:src:Kitto:EF.PluginManager.TEFPluginManager.OnUnloadPluginError" />
      <reference referencedUin="delphi:l_ast:src:Kitto:EF.PluginManager.TEFPluginManager.AfterLoadPlugin" />
      <reference referencedUin="delphi:l_ast:src:Kitto:EF.PluginManager.TEFPluginManager.BeforeLoadPlugin" />
      <reference referencedUin="delphi:l_ast:src:Kitto:EF.PluginManager.TEFPluginManager.OnLoadPluginError" />
      <reference referencedUin="delphi:l_ast:src:Kitto:EF.PluginManager.TEFPluginManager.PluginInfos[System.Integer]" />
      <reference referencedUin="delphi:l_ast:src:Kitto:EF.PluginManager.TEFPluginManager.FOnUnloadPluginError" />
      <reference referencedUin="delphi:l_ast:src:Kitto:EF.PluginManager.TEFPluginManager.FBeforeUnloadPlugin" />
      <reference referencedUin="delphi:l_ast:src:Kitto:EF.PluginManager.TEFPluginManager.FAfterLoadPlugin" />
      <reference referencedUin="delphi:l_ast:src:Kitto:EF.PluginManager.TEFPluginManager.FBeforeLoadPlugin" />
      <reference referencedUin="delphi:l_ast:src:Kitto:EF.PluginManager.TEFPluginManager.FOnLoadPluginError" />
      <reference referencedUin="delphi:l_ast:src:Kitto:EF.PluginManager.TEFPluginManager.FAfterUnloadPlugin" />
      <reference referencedUin="delphi:l_ast:src:Kitto:EF.PluginManager.TEFPluginManager.AfterUnloadPlugin" />
      <reference referencedUin="delphi:e_field:src:Kitto:EF.PluginManager.TEFPluginManager.FPluginInfos" />
      <reference referencedUin="delphi:e_field:src:Kitto:EF.PluginManager.TEFPluginManager.FFileSpec" />
      <reference referencedUin="delphi:e_field:src:Kitto:EF.PluginManager.TEFPluginManager.FOnLoadPluginError" />
      <reference referencedUin="delphi:e_field:src:Kitto:EF.PluginManager.TEFPluginManager.FBeforeLoadPlugin" />
      <reference referencedUin="delphi:e_field:src:Kitto:EF.PluginManager.TEFPluginManager.FAfterLoadPlugin" />
      <reference referencedUin="delphi:e_field:src:Kitto:EF.PluginManager.TEFPluginManager.FAfterUnloadPlugin" />
      <reference referencedUin="delphi:e_field:src:Kitto:EF.PluginManager.TEFPluginManager.FBeforeUnloadPlugin" />
      <reference referencedUin="delphi:e_field:src:Kitto:EF.PluginManager.TEFPluginManager.FOnUnloadPluginError" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.PluginManager.TEFPluginManager.GetPluginInfo(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.PluginManager.TEFPluginManager.GetPluginInfoCount()" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.PluginManager.TEFPluginManager.DoLoadPluginError(System.string,SysUtils.Exception,ref@System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.PluginManager.TEFPluginManager.DoUnloadPluginError(System.string,SysUtils.Exception,ref@System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.PluginManager.TEFPluginManager.Create()" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.PluginManager.TEFPluginManager.Destroy()" />
      <reference referencedUin="delphi:e_property:src:Kitto:EF.PluginManager.TEFPluginManager.PluginInfos[System.Integer]" />
      <reference referencedUin="delphi:e_property:src:Kitto:EF.PluginManager.TEFPluginManager.PluginInfoCount" />
      <reference referencedUin="delphi:e_property:src:Kitto:EF.PluginManager.TEFPluginManager.FileSpec" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.PluginManager.TEFPluginManager.LoadPlugins()" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.PluginManager.TEFPluginManager.UnloadPlugins()" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.PluginManager.TEFPluginManager.LoadPlugin(System.string,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.PluginManager.TEFPluginManager.EnsurePluginLoaded(System.string)" />
      <reference referencedUin="delphi:e_method:src:Kitto:EF.PluginManager.TEFPluginManager.UnloadPlugin(System.Integer)" />
      <reference referencedUin="delphi:e_property:src:Kitto:EF.PluginManager.TEFPluginManager.OnLoadPluginError" />
      <reference referencedUin="delphi:e_property:src:Kitto:EF.PluginManager.TEFPluginManager.BeforeLoadPlugin" />
      <reference referencedUin="delphi:e_property:src:Kitto:EF.PluginManager.TEFPluginManager.AfterLoadPlugin" />
      <reference referencedUin="delphi:e_property:src:Kitto:EF.PluginManager.TEFPluginManager.OnUnloadPluginError" />
      <reference referencedUin="delphi:e_property:src:Kitto:EF.PluginManager.TEFPluginManager.BeforeUnloadPlugin" />
      <reference referencedUin="delphi:e_property:src:Kitto:EF.PluginManager.TEFPluginManager.AfterUnloadPlugin" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Kitto:EF.PluginManager.TEFAfterUnloadPluginEvent">
      <property name="$shortcutReference" value="true" />
    </reference>
  </view>
</nodeSet>